# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

import json
import os

from tests.utils import get_approval_project
from calm.dsl.builtins import *

DSL_CONFIG = json.loads(read_local_file(".tests/config.json"))
POLICY_PROJECT = get_approval_project(DSL_CONFIG)

# Secret Variables
BP_CRED_root_PASSWORD = read_local_file(".tests/password")

# Credentials
BP_CRED_root = basic_cred(
    "root",
    BP_CRED_root_PASSWORD,
    name="root",
    type="PASSWORD",
    default=True,
)


class Service1(Service):

    pass


class VM1(Substrate):

    os_type = "Linux"
    provider_type = "AWS_VM"
    provider_spec = read_provider_spec(os.path.join("specs", "VM1_provider_spec.yaml"))
    provider_spec_editables = read_spec(
        os.path.join("specs", "VM1_create_spec_editables.yaml")
    )
    readiness_probe = readiness_probe(
        connection_type="SSH",
        disabled=True,
        retries="5",
        connection_port=22,
        address="@@{public_ip_address}@@",
        delay_secs="120",
    )


class Package1(Package):

    services = [ref(Service1)]


class AwsDeployment(Deployment):

    name = "11e64316_deployment"
    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(Package1)]
    substrate = ref(VM1)


class Default(Profile):

    deployments = [AwsDeployment]


class test_aws_bp(Blueprint):

    services = [Service1]
    packages = [Package1]
    substrates = [VM1]
    profiles = [Default]
    credentials = [BP_CRED_root]


class BlueprintMetadata(Metadata):
    project = Ref.Project(POLICY_PROJECT)
