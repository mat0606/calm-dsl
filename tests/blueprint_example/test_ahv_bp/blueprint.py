# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

import json  # no_qa
import os  # no_qa

from calm.dsl.builtins import *  # no_qa
from calm.dsl.builtins import read_local_file
from tests.utils import get_approval_project

DSL_CONFIG = json.loads(read_local_file(".tests/config.json"))
CLUSTER = DSL_CONFIG["ACCOUNTS"]["NTNX_LOCAL_AZ"]["SUBNETS"][1]["CLUSTER"]
POLICY_PROJECT = get_approval_project(DSL_CONFIG)

# Secret Variables
BP_CRED_root_PASSWORD = read_local_file(".tests/password")

# Credentials
BP_CRED_root = basic_cred(
    "root",
    BP_CRED_root_PASSWORD,
    name="root",
    type="PASSWORD",
    default=True,
)


class Service1(Service):

    pass


class vmcalm_array_indexcalm_timeResources(AhvVmResources):
    memory = 3
    vCPUs = 1
    cores_per_vCPU = 4
    disks = [
        AhvVmDisk.Disk.Scsi.cloneFromImageService("CentOS-7-cloudinit", bootable=True)
    ]
    nics = [AhvVmNic.NormalNic.ingress("vlan1211", cluster=CLUSTER)]


class vmcalm_array_indexcalm_time(AhvVm):

    name = "vm-@@{calm_array_index}@@-@@{calm_time}@@"
    resources = vmcalm_array_indexcalm_timeResources
    cluster = Ref.Cluster(name=CLUSTER)


class VM1(Substrate):

    os_type = "Linux"
    provider_type = "AHV_VM"
    provider_spec = vmcalm_array_indexcalm_time

    readiness_probe = readiness_probe(
        connection_type="SSH",
        disabled=True,
        retries="5",
        connection_port=22,
        address="@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
        delay_secs="0",
    )


class Package1(Package):

    services = [ref(Service1)]


class AhvDeployment(Deployment):

    name = "57e289cf_deployment"
    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(Package1)]
    substrate = ref(VM1)


class Default(Profile):

    deployments = [AhvDeployment]


class test_ahv_bp(Blueprint):

    services = [Service1]
    packages = [Package1]
    substrates = [VM1]
    profiles = [Default]
    credentials = [BP_CRED_root]


class BlueprintMetadata(Metadata):
    project = Ref.Project(POLICY_PROJECT)
